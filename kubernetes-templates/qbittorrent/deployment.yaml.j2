apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  labels:
    app.kubernetes.io/instance: qbittorrent
    app.kubernetes.io/name: qbittorrent
    app.kubernetes.io/version: {{ qbittorrent_version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: qbittorrent
      app.kubernetes.io/name: qbittorrent
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: qbittorrent
        app.kubernetes.io/name: qbittorrent
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: qbittorrent-config
        - name: downloads-volume
          hostPath:
            path: {{ downloads_folder }}
            type: Directory
      containers:
        - name: qbittorrent
          image: {{ qbittorrent_image }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: TZ
              value: Europe/Paris
          resources: {}
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads-volume
              mountPath: /downloads
          livenessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      automountServiceAccountToken: true
      securityContext: {}
      schedulerName: default-scheduler
      enableServiceLinks: true
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
